spring.application.name=admission-portal
server.port=8080

# ===============================================
# MYSQL DATABASE CONFIGURATION
# ===============================================
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASSWORD}

#spring.datasource.url=jdbc:mysql://localhost:3306/hmec_admission_db
#spring.datasource.username=root
#spring.datasource.password=root

# The driver class for the MySQL Connector/J. This line is often optional as Spring Boot can auto-detect it.
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# This tells Hibernate to update the database schema (create tables, columns, etc.)
# based on your @Entity classes when the application starts.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# ===============================================
# FILE UPLOAD CONFIGURATION
# ===============================================
file.upload-dir=./uploads

# ===============================================
# DIAGNOSTIC LOGGING
# ===============================================
# Show the exact SQL statements being sent to the database
logging.level.org.hibernate.SQL=DEBUG
# Show the parameters being bound to the SQL statements
logging.level.org.hibernate.type.descriptor.sql=TRACE
# Show detailed transaction status (begin, commit, rollback)
logging.level.org.springframework.transaction=TRACE

# JWT
security.jwt.secret=change_this_to_a_long_random_secret_key_at_least_32_bytes
security.jwt.expiration-ms=86400000

# CORS (if you use Spring global cors, already in SecurityConfig)
# Database config (example H2 / MySQL)
spring.jpa.show-sql=false

# File Upload Configuration
spring.servlet.multipart.location=./uploads
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

